import alf.algorithms.forward_network_algorithm

# dataset config
create_dataset.dataset_name='mnist_inlier'
create_dataset.train_batch_size=50
create_dataset.test_batch_size=100

# Lenet for MNIST
CONV_LAYER_PARAMS=((6, 5, 1, 2, 2), (16, 5, 1, 0, 2), (120, 5, 1))
FC_LAYER_PARAMS = (84, )

forwardnet/Adam.lr=1e-3
forwardnet/Adam.weight_decay=1e-4

# algorithm config
ForwardNetwork.conv_layer_params=%CONV_LAYER_PARAMS
ForwardNetwork.fc_layer_params=%FC_LAYER_PARAMS
ForwardNetwork.use_fc_bn=False
ForwardNetwork.use_conv_bn=False
ForwardNetwork.ensemble_vote='soft'
ForwardNetwork.ensemble_size=5

ForwardNetwork.loss_type = 'classification'
ForwardNetwork.optimizer=@forwardnet/Adam()
ForwardNetwork.logging_training=True
ForwardNetwork.logging_evaluate=True

# training config
TrainerConfig.algorithm_ctor=@ForwardNetwork
TrainerConfig.num_epochs=1000
TrainerConfig.num_checkpoints=2
TrainerConfig.evaluate=True
TrainerConfig.eval_uncertainty=1
TrainerConfig.eval_interval=1
TrainerConfig.summary_interval=1
TrainerConfig.debug_summaries=True
TrainerConfig.summarize_grads_and_vars=True

